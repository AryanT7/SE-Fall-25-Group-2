# OCR API Testing Commands
# Run these commands after starting the FastAPI server

# 1. Start the FastAPI server first:
# uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

# 2. Create test PDF:
# python create_test_pdf.py

# 3. Test Health Check Endpoint:
curl -X GET "http://localhost:8000/ocr/health"

# 4. Test Text Parsing Endpoint:
curl -X POST "http://localhost:8000/ocr/parse-menu-text" \
  -H "Content-Type: application/json" \
  -d '{
    "text_content": "APPETIZERS\nBuffalo Wings - $9.99\nSpicy chicken wings with celery and blue cheese dip\n\nMAIN COURSES\nGrilled Salmon - $18.99\nFresh Atlantic salmon with lemon herb butter\n\nBEVERAGES\nFresh Orange Juice - $4.99\nFreshly squeezed orange juice, 12oz"
  }'

# 5. Test PDF Upload Endpoint:
curl -X POST "http://localhost:8000/ocr/parse-menu" \
  -F "file=@test_menu.pdf"

# 6. Test with Authentication (if you have a JWT token):
# Replace YOUR_JWT_TOKEN with actual token
curl -X POST "http://localhost:8000/ocr/parse-menu" \
  -H "Authorization: Bearer YOUR_JWT_TOKEN" \
  -F "file=@test_menu.pdf"

# 7. Test Error Cases:

# Empty file:
curl -X POST "http://localhost:8000/ocr/parse-menu" \
  -F "file=@empty_file.txt"

# Wrong file type:
curl -X POST "http://localhost:8000/ocr/parse-menu" \
  -F "file=@test_menu.txt"

# Empty text content:
curl -X POST "http://localhost:8000/ocr/parse-menu-text" \
  -H "Content-Type: application/json" \
  -d '{"text_content": ""}'

# Expected JSON Response Format:
# {
#   "items": [
#     {
#       "name": "Buffalo Wings",
#       "calories": 350,
#       "price": 9.99,
#       "ingredients": "chicken wings, buffalo sauce",
#       "quantity": "6 pieces",
#       "servings": 1.0,
#       "veg_flag": false,
#       "kind": "appetizer"
#     }
#   ]
# }
